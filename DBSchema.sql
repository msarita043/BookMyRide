create database bookMyRide;

CREATE TABLE users (
  USER_ID INT NOT NULL AUTO_INCREMENT,
  EMAIL_ID VARCHAR(30) NOT NULL,
  NAME VARCHAR(30) NOT NULL,
  CONTACT_NO INT NOT NULL,
  PASSWORD VARCHAR(255) NOT NULL,
  ROLE ENUM('USER', 'DRIVER', 'ADMIN') NOT NULL DEFAULT 'USER',
  PRIMARY KEY (USER_ID),
  UNIQUE INDEX EMAIL_ID_UNIQUE (EMAIL_ID)
  );

CREATE TABLE car_type (
  CAR_TYPE_ID int NOT NULL AUTO_INCREMENT,
  CAR_TYPE varchar(45) NOT NULL,
  PRIMARY KEY (CAR_TYPE_ID),
  UNIQUE KEY CAR_TYPE_UNIQUE (CAR_TYPE)
);


CREATE TABLE driver (
  DRIVER_ID INT NOT NULL AUTO_INCREMENT,
  USER_ID INT NOT NULL,
  CAR_TYPE_ID INT NOT NULL,
  CAR_MODEL VARCHAR(45) NOT NULL,
  CAR_REG_NO VARCHAR(45) NOT NULL,
  ACTIVATION_STATUS ENUM('ACTIVE', 'DISABLED') NOT NULL DEFAULT 'ACTIVE',
  PRIMARY KEY (DRIVER_ID),
  INDEX CARTYPE_DRIVER_idx (CAR_TYPE_ID),
  INDEX USER_DRIVER_idx (USER_ID),
  CONSTRAINT USER_DRIVER
    FOREIGN KEY (USER_ID)
    REFERENCES users (USER_ID)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT CARTYPE_DRIVER
    FOREIGN KEY (CAR_TYPE_ID)
    REFERENCES car_type (CAR_TYPE_ID)
    ON DELETE CASCADE
    ON UPDATE CASCADE
);

CREATE TABLE ride_bookings (
  RIDE_ID INT NOT NULL AUTO_INCREMENT,
  USER_ID INT NOT NULL,
  CAR_TYPE_ID INT NOT NULL,
  NO_OF_HOURS INT NOT NULL,
  CHARGES INT NOT NULL,
  PICKUP_LOCATION VARCHAR(100) NULL,
  PICKUP_ADDRESS VARCHAR(100) NULL,
  PICKUP_TIME DATETIME NOT NULL,
  BOOKING_TIME DATETIME NOT NULL,
  BOOKING_STATUS ENUM('PENDING', 'CONFIRMED', 'CANCLED') NOT NULL,
  DRIVER_ID INT NULL,
  PAYMENT_STATUS ENUM('PAID', 'NOT_PAID') NOT NULL,
  PAYMENT_METHOD ENUM('CASH', 'ONLINE') NOT NULL,
  PRIMARY KEY (RIDE_ID),
  INDEX USER_RIDEBOOKING_idx (USER_ID),
  INDEX CARTYPE_RIDEBOOKING_idx (CAR_TYPE_ID),
  INDEX DRIVER_RIDEBOOKING_idx (DRIVER_ID),
  CONSTRAINT USER_RIDEBOOKING
    FOREIGN KEY (USER_ID)
    REFERENCES users (USER_ID)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT CARTYPE_RIDEBOOKING
    FOREIGN KEY (CAR_TYPE_ID)
    REFERENCES car_type (CAR_TYPE_ID)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT DRIVER_RIDEBOOKING
    FOREIGN KEY (DRIVER_ID)
    REFERENCES driver (DRIVER_ID)
    ON DELETE SET NULL
    ON UPDATE CASCADE
);


